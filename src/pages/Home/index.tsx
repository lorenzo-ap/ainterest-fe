import { ActionIcon, CloseButton, Text, TextInput, Title, Tooltip } from '@mantine/core';
import { IconRefresh } from '@tabler/icons-react';
import { useSelector } from 'react-redux';
import { RenderCards } from '../../components';
import useFetchPosts from '../../hooks/useFetchPosts';
import useSearchPosts from '../../hooks/useSearchPosts';
import { RootState } from '../../redux/store';

const Home = () => {
  const posts = useSelector((state: RootState) => state.posts.allPosts);

  const { fetchPosts, loading } = useFetchPosts();
  const { searchText, searchedPosts, handleSearchChange, resetSearch } = useSearchPosts(posts, true);

  return (
    <section className='mx-auto max-w-7xl'>
      <div className='flex flex-col items-start justify-between gap-5 md:flex-row'>
        <div>
          <Title order={1}>The Community Showcase</Title>

          <Text className='mt-2 max-w-[500px] opacity-60'>
            Browse through a collection of imaginative and visually stunning images generated by AI
          </Text>
        </div>
      </div>

      <div className='mt-8 flex items-end gap-x-2'>
        <TextInput
          flex={1}
          size='md'
          radius='md'
          label='Search posts'
          placeholder='Enter prompt or username'
          disabled={loading}
          value={searchText}
          onChange={handleSearchChange}
          rightSection={
            searchText && (
              <Tooltip withArrow label='Clear'>
                <CloseButton onClick={resetSearch} />
              </Tooltip>
            )
          }
        />

        <Tooltip label='Refresh posts' withArrow>
          <ActionIcon size={42} color='violet' radius='md' onClick={fetchPosts} loading={loading} aria-label='Refresh'>
            <IconRefresh size={18} />
          </ActionIcon>
        </Tooltip>
      </div>

      <div className='mt-3'>
        {searchText && (
          <Title className='mb-3 font-medium' order={2} size={'h3'}>
            <span className='opacity-60'>Showing results for</span> <span className='opacity-100'>{searchText}</span>
          </Title>
        )}

        <RenderCards title='No posts found' posts={searchText ? searchedPosts : posts} loading={loading} />
      </div>
    </section>
  );
};

export default Home;
